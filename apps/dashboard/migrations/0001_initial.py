# Generated by Django 5.0.7 on 2024-08-15 14:02

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('analysis', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date and Time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modification Date and Time')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Untitled Conversation', max_length=255)),
                ('status', models.CharField(choices=[('AC', 'Active'), ('AR', 'Archived'), ('EN', 'Ended')], default='AC', max_length=2)),
                ('overall_sentiment', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Intent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date and Time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modification Date and Time')),
                ('content', models.TextField()),
                ('is_from_user', models.BooleanField(default=True)),
                ('in_reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='dashboard.message')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='dashboard.conversation')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='dominant_topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations', to='dashboard.topic'),
        ),
        migrations.CreateModel(
            name='AIMessage',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.message')),
                ('recommendation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_messages', to='analysis.recommendation')),
            ],
            options={
                'abstract': False,
            },
            bases=('dashboard.message',),
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.message')),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('intent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mesages', to='dashboard.intent')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='dashboard.topic')),
            ],
            options={
                'abstract': False,
            },
            bases=('dashboard.message',),
        ),
        migrations.CreateModel(
            name='Sentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('PO', 'Positive'), ('NE', 'Negative'), ('NU', 'Neutral')], max_length=2)),
                ('score', models.FloatField()),
                ('granular_category', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detailed_sentiment', to='dashboard.usermessage')),
            ],
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created'], name='dashboard_m_convers_d51fcf_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_from_user'], name='dashboard_m_is_from_3db8e7_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['user', 'created'], name='dashboard_c_user_id_67d711_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['status'], name='dashboard_c_status_d8aae9_idx'),
        ),
    ]
